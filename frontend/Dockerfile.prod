# Build stage
FROM node:22 AS build-stage

WORKDIR /app

# Copy package files
COPY package*.json ./

# Clean install dependencies (avoid architecture conflicts)
RUN rm -rf node_modules package-lock.json && npm install

# Copy source code
COPY . .

# Build the Angular app for production
RUN npm run build

# Production stage
FROM nginx:alpine AS production-stage

# Create directories for nginx temp files (OpenShift compatible)
RUN mkdir -p /tmp/client_temp /tmp/proxy_temp /tmp/fastcgi_temp /tmp/uwsgi_temp /tmp/scgi_temp && \
    chmod -R 777 /tmp && \
    chgrp -R 0 /usr/share/nginx/html && \
    chmod -R g+rwX /usr/share/nginx/html && \
    chgrp -R 0 /var/cache/nginx && \
    chmod -R g+rwX /var/cache/nginx && \
    chgrp -R 0 /var/log/nginx && \
    chmod -R g+rwX /var/log/nginx && \
    chgrp -R 0 /etc/nginx && \
    chmod -R g+rwX /etc/nginx

# Copy the built app to nginx
COPY --from=build-stage /app/dist/frontend /usr/share/nginx/html

# Copy custom nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Fix permissions for OpenShift
RUN chgrp -R 0 /usr/share/nginx/html && \
    chmod -R g+rwX /usr/share/nginx/html

# Expose port 8080 (non-privileged)
EXPOSE 8080

# Start nginx (OpenShift will assign user automatically)
CMD ["nginx", "-g", "daemon off;"]